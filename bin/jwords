#!/usr/bin/env ruby
# encoding: utf-8
require 'optparse'
require 'ostruct'
require 'pp'

$:.push File.expand_path("../../lib", __FILE__)
require 'jumping_words'

options = OpenStruct.new
options.message = SHOW_MESSAGE
options.space_words = SPACE_WORDS
options.space_interation = SPACE_INTERATION

optparse = OptionParser.new do |opts|

  opts.on( '-n', '--no-message', 'No display message' ) do
    options.message = false
  end

  opts.on( '-w', '--space-words [SPACE]', Integer, "Space between a word and translate. Default: #{SPACE_WORDS}" ) do |space_words|
    options.space_words = space_words
  end

  opts.on( '-i', '--space-interation [SPACE]', Integer, "Space an each interation. Default: #{SPACE_INTERATION}" ) do |space_interation|
    options.space_interation = space_interation
  end

  #The command addes a word
  opts.on( '-a', '--add', 'Add the word' ) do
    if ARGV.empty? or ARGV.size < 2
      puts 'You mast set 2 words! First is word, second is translate. Like this: "jwords -a to run: бежать"'
      exit
    else
      db = DbWords.new(ARGV)
      db.add
      exit
    end
  end

  #The command deletes the word
  opts.on( '-d', '--destroy', 'Delete the word' ) do
    if ARGV.empty?
      puts 'You mast set number of word!'
      exit
    else
      db = DbWords.new(ARGV)
      db.destroy
      exit
    end
  end



end

optparse.parse!

puts "Show message: #{options.message}"
puts "Timeout between a word and translate: #{options.space_words} sec."
puts "Timeout to start list: #{options.space_interation} sec."

#run the application
if ARGV.first == 'start'
  db = DbWords.new
  app = SayWords.new(:show_message => options.message,  :space_words => options.space_words, :space_interation => options.space_interation)

  begin
    app.run
  rescue Interrupt
    puts "Exiting..."
  end
end


#The list of words
if ARGV.first == 'list'
  db = DbWords.new
  db.list
  exit
end
